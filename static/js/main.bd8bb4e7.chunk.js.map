{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","cryptos","oldcryptos","newcryptos","miscdata","newercryptos","cryptodata","currency","axios","get","then","res","console","log","data","USD","_this2","goldenRetriever","cryptocurrency","setState","all","map","l","spread","_len","arguments","length","Array","_key","_this3","_ref","userGroup","full_name","loading","uid","cryptocurrency_name","cryptocurrency_icon_URL","cryptocurrency_trading_symbol","cryptocurrency_token_balance","crypto_price","columns","values","Header","accessor","Cell","react_default","a","createElement","className","value","defineProperty","id","d","height","src","Math","abs","es","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd8bb4e7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactTable from \"react-table\";\nimport 'react-table/react-table.css'\nimport './App.css';\nimport axios from 'axios';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // this.goldenRetriever = this.goldenRetriever(cryptocurrency).bind(this);\n    this.state = {\n      cryptos: [],\n      oldcryptos: [],\n      newcryptos: [],\n      miscdata: [],\n      newercryptos:[],\n      cryptodata: [],\n    };\n\n  }\n  // added this function because cryptocompare conveniently does not allow us to call every currency we need in one api call\n  async get_data(currency){\n    return await axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym='\n        + currency + '&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name').then(res => {\n          // const cryptodata = res.data;]\n         \n         console.log(res.data.USD);\n         console.log(\"I was supplied with \"+currency)\n         \n       });\n  }\n\n  componentDidMount() {\n    this.goldenRetriever = (cryptocurrency)=> {\n      // var cryptodata = []\n      axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym='\n        + cryptocurrency + '&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name').then(res => {\n          const cryptodata = res.data;\n          this.setState({cryptodata :cryptodata});\n       });\n      \n       return this.state.cryptodata.USD;\n    }\n    // console.log(\"component was mounted\" + this.goldenRetriever(\"BTC\"))\n    axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,OMG,XMR,ZEC,XLM,STRAT,LTC,NEO,ADA,ICX,WAVES,ETH,STEEM,EOS,DASH,IOTA,XRP,BAT,XVG,TRX&tsyms=USD')\n      .then(res => {\n        const cryptos = res.data;\n        console.log(cryptos);\n        this.setState({ cryptos: cryptos });\n      })\n    axios.get('c')\n      .then(res => {\n        const oldcryptos = res.data;\n        console.log(oldcryptos);\n        this.setState({ oldcryptos: oldcryptos });\n      })\n    // axios.get('https://min-api.cryptocompare.com/data/pricemultifull?fsyms=BTC,OMG,XMR,ZEC,XLM,STRAT,LTC,NEO,ADA,ICX,WAVES,ETH,STEEM,EOS,DASH,IOTA,XRP,BAT,XVG,TRX&tsyms=USD')\n    // .then(res => {\n    //   const miscdata = res.data;\n    //   console.log(miscdata);\n    //   this.setState({miscdata: miscdata});\n    // })\n    const linksArray = ['https://min-api.cryptocompare.com/data/dayAvg?fsym=BTC&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name','https://min-api.cryptocompare.com/data/dayAvg?fsym=OMG&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name','https://min-api.cryptocompare.com/data/dayAvg?fsym=BTC&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name','https://min-api.cryptocompare.com/data/dayAvg?fsym=XMR&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name']\n    axios.all(linksArray.map(l => axios.get(l)))\n    .then(axios.spread(function (...res) {\n      const newercryptos = res\n      // all requests are now complete\n      console.log(\"This is newer crptos\" + res);\n      this.setState({ newercryptos: newercryptos });\n    }));\n    // axios.all([\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=BTC&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=OMG&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=XMR&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=ZEC&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=XLM&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=STRAT&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=LTC&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=NEO&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=ADA&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=ICX&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=WAVES&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=ETH&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=STEEM&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=EOS&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=DASH&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=IOTA&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=XRP&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=BAT&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=XVG&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    //   axios.get('https://min-api.cryptocompare.com/data/dayAvg?fsym=TRX&tsym=USD&toTs=1392382854&tryConversion=false&extraParams=your_app_name'),\n    // ])\n    //   .then(axios.spread(\n    //     (btcRes, omgRes, xmrRes, zecRes, xlmRes, stratRes, ltcRes, neoRes, adaRes, icxRes, wavesRes, ethRes, steemRes, eosRes, dashRes, iotaRes, xrpRes, batRes, xvgRes, trxRes) => {\n    //       console.log(\"this is btcres \" + btcRes)\n        // const newcryptos = btcRes\n        // newcryptos.push(omgRes)\n        // newcryptos.push(xmrRes)\n        // newcryptos.push(zecRes)\n        // newcryptos.push(xlmRes)\n        // newcryptos.push(stratRes)\n        // newcryptos.push(ltcRes)\n        // newcryptos.push(neoRes)\n        // newcryptos.push(adaRes)\n        // newcryptos.push(icxRes)\n        // newcryptos.push(wavesRes)\n        // newcryptos.push(ethRes)\n        // newcryptos.push(steemRes)\n        // newcryptos.push(eosRes)\n        // newcryptos.push(dashRes)\n        // newcryptos.push(iotaRes)\n        // newcryptos.push(xrpRes)\n        // newcryptos.push(batRes)\n        // newcryptos.push(xvgRes)\n        // newcryptos.push(trxRes)\n\n        // console.log(newcryptos);\n        // this.setState({newcryptos: newcryptos});\n      // }));\n\n\n\n  }\n\n\n\n  render() {\n    console.log(\"hi\")\n    // console.log(\"this is golden \" + this.goldenRetriever(\"BTC\"));\n    // console.log(this.goldenRetriever(\"BTC\")-5);\n    // console.log(this.state.cryptos);\n    // console.log(this.state.oldcryptos);\n\n    // Using the data given as example, I assume userGroup will be dynamic and will change over time.\n    // you can import \n    const userGroup = [{\n      full_name: 'Hattie',\n      loading: '...',\n      uid: '01',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'Bitcoin',\n        cryptocurrency_icon_URL: \"https://www.cryptocompare.com/media/19633/btc.png\",\n        cryptocurrency_trading_symbol: 'BTC',\n        cryptocurrency_token_balance: 0.0159952,\n        crypto_price: 9121.88\n      }\n    }, {\n\n      full_name: 'Ella',\n      loading: '...',\n      uid: '02',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'Monero',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/19969/xmr.png',\n        cryptocurrency_trading_symbol: 'XMR',\n        cryptocurrency_token_balance: 0.0159952,\n        crypto_price: 259.09\n      }\n    }, {\n      full_name: 'Flora',\n      loading: '...',\n      uid: '03',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'OmiseGO',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/1383814/omisego.png',\n        cryptocurrency_trading_symbol: 'OMG',\n        cryptocurrency_token_balance: 0.319904,\n        crypto_price: 14.63\n      }\n    }, {\n      full_name: 'Hilda',\n      loading: '...',\n      uid: '04',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'Zcash',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/351360/zec.png',\n        cryptocurrency_trading_symbol: 'ZEC',\n        cryptocurrency_token_balance: 0.319904,\n        crypto_price: 467.94\n      }\n    }, {\n      full_name: 'Betsy',\n      loading: '...',\n      uid: '05',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'Stellar Lumens',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/35521289/xlm.png',\n        cryptocurrency_trading_symbol: 'XLM',\n        cryptocurrency_token_balance: 11.9964,\n        crypto_price: 0.4281\n      }\n    }, {\n      full_name: 'Inez',\n      loading: '...',\n      uid: '06',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'Stratis',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/351303/stratis-logo.png',\n        cryptocurrency_trading_symbol: 'STRAT',\n        cryptocurrency_token_balance: 0.559832,\n        crypto_price:  8.95\n      }\n    }, {\n      full_name: 'Beulah',\n      loading: '...',\n      uid: '07',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'Litecoin',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/35309662/ltc.png',\n        cryptocurrency_trading_symbol: 'LTC',\n        cryptocurrency_token_balance: 15.35,\n        crypto_price: 195.14\n      }\n    }, {\n      full_name: 'Gladys',\n      loading: '...',\n      uid: '08',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'NEO',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/1383858/neo.jpg',\n        cryptocurrency_trading_symbol: 'NEO',\n        cryptocurrency_token_balance: 0.049985,\n        crypto_price: 115.79\n      }\n    }, {\n      full_name: 'Camille',\n      loading: '...',\n      uid: '09',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'Cardano',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/12318177/ada.png',\n        cryptocurrency_trading_symbol: 'ADA',\n        cryptocurrency_token_balance: 13.9958,\n        crypto_price: 0.3737\n      }\n    }, {\n      full_name: 'Celia',\n      loading: '...',\n      uid: '10',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'Icon',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/12318192/icx.png',\n        cryptocurrency_trading_symbol: 'ICX',\n        cryptocurrency_token_balance: 1.309607,\n        crypto_price: 4.28\n      }\n    }, {\n      full_name: 'Edith',\n      loading: '...',\n      uid: '11',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'Waves',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/27010639/waves2.png',\n        cryptocurrency_trading_symbol: 'WAVES',\n        cryptocurrency_token_balance: 0.819754,\n        crypto_price: 5.93\n      }\n    }, {\n      full_name: 'Betty',\n      loading: '...',\n      uid: '12',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'Ethereum',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/20646/eth_logo.png',\n        cryptocurrency_trading_symbol: 'ETH',\n        cryptocurrency_token_balance: 0.0059,\n        crypto_price: 888.78\n      }\n    }, {\n      full_name: 'Agnes',\n      loading: '...',\n      uid: '13',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'Steem',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/350907/steem.png',\n        cryptocurrency_trading_symbol: 'STEEM',\n        cryptocurrency_token_balance: 1.189643,\n        crypto_price: 4.15\n      }\n    }, {\n      full_name: 'Ellen',\n      loading: '...',\n      uid: '14',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'EOS',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/1383652/eos_1.png',\n        cryptocurrency_trading_symbol: 'EOS',\n        cryptocurrency_token_balance: 0.49985,\n        crypto_price: 9.43\n      }\n    }, {\n      full_name: 'Carmen',\n      loading: '...',\n      uid: '15',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'Dash',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/33842920/dash.png',\n        cryptocurrency_trading_symbol: 'DASH',\n        cryptocurrency_token_balance: 0.0079976,\n        crypto_price: 650.2\n      }\n    }, {\n      full_name: 'Gladys',\n      loading: '...',\n      uid: '16',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'MIOTA',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/35309345/no-image.png',\n        cryptocurrency_trading_symbol: 'IOTA',\n        cryptocurrency_token_balance: 2.9991,\n        crypto_price: 0\n      }\n    }, {\n      full_name: 'Eloise',\n      loading: '...',\n      uid: '17',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'Ripple',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/34477776/xrp.png',\n        cryptocurrency_trading_symbol: 'XRP',\n        cryptocurrency_token_balance: 4.9985,\n        crypto_price: 1.07\n      }\n    }, {\n      full_name: 'Belle',\n      loading: '...',\n      uid: '18',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD, \n        cryptocurrency_name: 'Basic Attention Token',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/1383370/bat.png',\n        cryptocurrency_trading_symbol: 'BAT',\n        cryptocurrency_token_balance: 12.9961,\n        crypto_price: 0.3805\n      }\n    }, {\n      full_name: 'Anita',\n      loading: '...',\n      uid: '19',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'Verge',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/12318032/xvg.png',\n        cryptocurrency_trading_symbol: 'XVG',\n        cryptocurrency_token_balance: 82.9751,\n        crypto_price: 0.05657\n      }\n    }, {\n      full_name: 'Greta',\n      loading: '...',\n      uid: '20',\n      data: {\n        // usd_value: this.state.cryptos['XMR'].USD,\n        cryptocurrency_name: 'TRON',\n        cryptocurrency_icon_URL: 'https://www.cryptocompare.com/media/34477805/trx.jpg',\n        cryptocurrency_trading_symbol: 'TRX',\n        cryptocurrency_token_balance: 99.97,\n        crypto_price:  0.04526\n      }\n    }\n    ];\n    const convertedObject = Object.values(userGroup);\n    var columns = []\n    if (this.state.cryptos.length === 0) {\n      console.log(\"empty\")\n      columns = [{\n        Header: 'User ID',\n        accessor: 'uid'\n      }, {\n        Header: 'User Name',\n        accessor: 'full_name',\n        Cell: props => <span className='number'>{props.value}</span>\n      }, {\n\n        Header: 'Crypto Trading Symbol',\n        accessor: 'data.cryptocurrency_trading_symbol',\n        Header: props => <span>Crypto Icon</span>,\n        accessor: 'data.cryptocurrency_icon_URL'\n      }, {\n\n        Header: 'Crypto Name',\n\n        accessor: 'data.cryptocurrency_name'\n      }, {\n\n        Header: 'Amount of coin/Token',\n        accessor: 'data.cryptocurrency_token_balance'\n      }, {\n\n        Header: 'USD Value',\n        accessor: 'loading'\n      }, {\n\n        Header: '% change in price since Feb 14, 2018',\n        accessor: 'full_name'\n      }, {\n\n        Header: '% difference of current price and price on 2/14/18',\n        accessor: 'full_name'\n      }, {\n\n        Header: 'USD value of % changed since 2/14/18',\n        accessor: 'full_name'\n      }]\n\n    } else {\n      console.log(\"not empty\")\n\n      // console.log(this.state.oldcryptos)\n      // var troll = this.state.cryptos['XMR'].USD\n\n      // console.log(troll)\n      // console.log(this.state.oldcryptos);\n      columns = [{\n        Header: 'User ID',\n        accessor: 'uid'\n      }, {\n        Header: 'User Name',\n        accessor: 'full_name',\n        Cell: props => <span className='number'>{props.value}</span>\n      }, {\n\n        Header: 'Crypto Trading Symbol',\n        accessor: 'data.cryptocurrency_trading_symbol'\n      }, {\n        id: 'friendName5',\n        Header: props => <span>Crypto Icon</span>,\n        // accessor: d => (d.data.cryptocurrency_icon_URL),\n        // Cell: d => <span className='number'>{d.data.cryptocurrency_icon_URL}</span>\n        accessor: d => {\n          return <div><img height={34} src={d.data.cryptocurrency_icon_URL}/></div>\n        },\n        \n        \n\n        // Header: \"Crypto Icon\",\n        // Cell: (row) => {\n        //   return <div><img height={34} src={row.original.cryptocurrency_icon_URL}/></div>\n        // },\n        // id: \"status\"\n        \n\n      }, {\n\n        Header: 'Crypto Name',\n\n        accessor: 'data.cryptocurrency_name'\n      }, {\n\n        Header: 'Amount of coin/Token',\n        accessor: 'data.cryptocurrency_token_balance'\n      }, {\n        id: 'friendName',\n        Header: 'USD Value',\n\n        accessor: d => (this.state.cryptos[d.data.cryptocurrency_trading_symbol].USD * d.data.cryptocurrency_token_balance) // Round up to required decimal places\n      }, {\n        id: 'friendName2',\n        Header: '% change in price since Feb 14, 2018',\n        \n        accessor: d => ( (this.state.cryptos[d.data.cryptocurrency_trading_symbol].USD  -  d.data.crypto_price  )  /  d.data.crypto_price)  *100\n    \n      }, {\n        id: 'friendName3',\n        Header: '% difference of current price and price on 2/14/18',\n        // accessor: d => ((this.state.cryptos[d.data.cryptocurrency_trading_symbol].USD-(d.data.crypto_price))/d.data.crypto_price*100)\n        accessor: d => Math.abs(( (this.state.cryptos[d.data.cryptocurrency_trading_symbol].USD  -  d.data.crypto_price  )  /  (d.data.crypto_price+this.state.cryptos[d.data.cryptocurrency_trading_symbol].USD)/2)  *100)\n      }, {\n        id: 'friendName4',\n        Header: 'USD value of % changed since 2/14/18',\n        // accessor: d => (((this.state.cryptos[d.data.cryptocurrency_trading_symbol].USD-(d.data.crypto_price))/d.data.crypto_price*100)*this.state.cryptos[d.data.cryptocurrency_trading_symbol].USD)\n        accessor: d => ( ( ( (this.state.cryptos[d.data.cryptocurrency_trading_symbol].USD  -  d.data.crypto_price  )  /  d.data.crypto_price)  *100) / 100) * this.state.cryptos[d.data.cryptocurrency_trading_symbol].USD\n      }]\n    }\n    return <ReactTable\n      data={userGroup}\n      columns={columns}\n    />\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}